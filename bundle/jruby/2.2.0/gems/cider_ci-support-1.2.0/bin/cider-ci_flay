#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require 'yaml'
require 'flay'

require 'pry'

###############################################################################
#
# Static similarity code analysis based on flay.
#
# Author: Thomas Schank <DrTom@schank.ch>
#
###############################################################################

###############################################################################
# Options, main ....
###############################################################################

def parse_options(options)
  OptionParser.new do |opts|
    opts.banner = 'Usage: cider-ci_flay FILE/DIR ...'

    opts.on('-d', '--print-details')  do
      options.print_details = true
    end

    opts.on('-m', '--mass MASS', Integer,
            "See flay documentation, default #{options.mass}.")  do |n|
      options.mass = n
    end
  end.parse!

  options
end

def main
  options = OpenStruct.new
  options.print_details = false
  options.mass = 16
  parse_options options

  flay_options = Flay.default_options.merge(
    mass: options.mass
  )

  flay = Flay.new flay_options
  files = Flay.expand_dirs_to_files(*ARGV)

  abort 'No files are selected' if files.empty?

  flay.process(*files)
  offending = flay.analyze

  if offending.empty?
    $stdout.puts 'cider-ci_flay OK'
    exit
  else
    $stderr.puts 'cider-ci_flay FAILED:'
    flay.report $stderr
    abort
  end
end

main
